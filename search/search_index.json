{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"GitHub Actions","text":"<p>For full documentation visit docs.github.com.</p>"},{"location":"#understanding-github-actions","title":"Understanding GitHub Actions","text":"<p><code>GitHub Actions</code> is a continuous integration and continuous delivery (CI/CD) platform that allows you to automate your build, test, and deployment pipeline. You can create workflows that build and test every pull request to your repository, or deploy merged pull requests to production. You must host your own Linux, Windows, or macOS virtual machines to run workflows for your GitHub Enterprise Server instance. Self-hosted runners can be physical, virtual, in a container, on-premises, or in a cloud.</p>"},{"location":"#creating-an-example-workflow","title":"Creating an example workflow","text":"<p>Workflow example:</p> <pre><code>name: learn-github-actions\nrun-name: ${{ github.actor }} is learning GitHub Actions\non: [push]\njobs:\n  check-bats-version:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-node@v3\n        with:\n          node-version: '14'\n      - run: npm install -g bats\n      - run: bats -v\n</code></pre>"},{"location":"#the-components-of-github-actions","title":"The Components of GitHub Actions","text":"<p>Workflows</p> <p>A workflow is a configurable automated process that will run one or more jobs. Workflows are defined by a YAML file checked in to your repository and will run when triggered by an event in your repository, or they can be triggered manually, or at a defined schedule.Workflows are defined in the .github/workflows directory in a repository, and a repository can have multiple workflows, each of which can perform a different set of tasks.</p> <p>Jobs</p> <p>A job is a set of steps in a workflow that is executed on the same runner. Each step is either a shell script that will be executed, or an action that will be run. Steps are executed in order and are dependent on each other. Since each step is executed on the same runner, you can share data from one step to another. For example, you can have a step that builds your application followed by a step that tests the application that was built.</p> <p>Events</p> <p>An event is a specific activity in a repository that triggers a workflow run. For example, activity can originate from GitHub when someone creates a pull request, opens an issue, or pushes a commit to a repository. You can also trigger a workflow to run on a schedule, by posting to a REST API, or manually.</p> <p>Runners</p> <p>A runner is a server that runs your workflows when they're triggered. Each runner can run a single job at a time. You must host your own runners for GitHub Enterprise Server. For more information, see \"Hosting your own runners.\"</p>"},{"location":"#activity-of-a-workflow-run","title":"Activity of a workflow run","text":""},{"location":"index2/","title":"GitHub Pages","text":"<p>For full documentation visit docs.github.com.</p>"},{"location":"index2/#understanding-github-pages","title":"Understanding GitHub Pages","text":"<p><code>GitHub Pages</code> is a static site hosting service that takes HTML, CSS, and JavaScript files straight from a repository on GitHub, optionally runs the files through a build process, and publishes a website. You can see examples of GitHub Pages sites in the GitHub Pages examples collection. You can create GitHub Pages sites that are publicly available on the internet. Organizations that use GitHub Enterprise Cloud can also publish sites privately by managing access control for the site. For more information, see \"Changing the visibility of your GitHub Pages site\" in the GitHub Enterprise Cloud documentation.</p>"},{"location":"index2/#types-of-github-pages-sites","title":"Types of GitHub Pages sites","text":"<p>There are three types of GitHub Pages sites: <code>project</code>, <code>user</code>, and <code>organization</code>. <code>Project</code> sites are connected to a specific project hosted on GitHub, such as a JavaScript library or a recipe collection. <code>User</code> and <code>organization</code> sites are connected to a specific account on GitHub.com.</p> <p>Warning</p> <p>Warning: GitHub Pages sites are publicly available on the internet, even if the repository for the site is private. If you have sensitive data in your site's repository, you may want to remove the data before publishing.</p>"},{"location":"index2/#deploying-github-pages-artifacts","title":"Deploying GitHub Pages artifacts","text":"<p>The <code>deploy-pages</code> action handles the necessary setup for deploying artifacts.</p> <pre><code>jobs:\n  deploy:\n    permissions:\n      contents: read\n      pages: write\n      id-token: write\n    runs-on: ubuntu-latest\n    needs: jekyll-build\n    environment:\n      name: github-pages\n      url: ${{steps.deployment.outputs.page_url}}\n    steps:\n      - name: Deploy artifact\n        id: deployment\n        uses: actions/deploy-pages@v1\n</code></pre>"},{"location":"index2/#configuring-a-publishing-source-for-github-pages-site","title":"Configuring a publishing source for GitHub Pages site","text":"<p>Example</p> Publishing from a branch Publishing with a custom GitHub Actions workflow <pre><code>* Settings, Pages, Deploy from a branch, select a branch\n</code></pre> <pre><code>* Settings, Pages, GitHub Actions\n</code></pre>"},{"location":"index2/#deleting-a-github-pages-site","title":"Deleting a Github Pages site","text":"<pre><code>stateDiagram-v2\n  state fork_state &lt;&lt;fork&gt;&gt;\n  [*] --&gt; fork_state\n  fork_state --&gt; Deleting_a_repo\n  fork_state --&gt; Changing_a_source</code></pre>"},{"location":"index3/","title":"GitHub Packages","text":"<p>For full documentation visit docs.github.com.</p>"},{"location":"index3/#about-github-packages","title":"About GitHub Packages","text":"<p> GitHub Packages is a platform for hosting and managing packages, including containers and other dependencies. GitHub Packages combines your source code and packages in one place to provide integrated permissions management and billing, so you can centralize your software development on GitHub. </p>"},{"location":"index3/#permissions-for-github-packages","title":"Permissions for GitHub Packages","text":""},{"location":"index3/#granular-permissions-for-userorganization-scoped-packages","title":"Granular permissions for user/organization-scoped packages","text":"<p>Packages with granular permissions are scoped to a personal account or organization. You can change the access control and visibility of the package separately from a repository that is connected (or linked) to a package.</p>"},{"location":"index3/#permissions-for-repository-scoped-packages","title":"Permissions for repository-scoped packages","text":"<p>A repository-scoped package inherits the permissions and visibility of the repository in which the package is published. You can find a package scoped to a repository by going to the main page of the repository and clicking the Packages link to the right of the page. For more information, see \"Connecting a repository to a package.\"</p>"},{"location":"index3/#publishing-a-package","title":"Publishing a package","text":"<p>Note</p> <p>GitHub Packages is available with GitHub Free, GitHub Pro, GitHub Free for organizations, GitHub Team, GitHub Enterprise Cloud, GitHub Enterprise Server 3.0 or higher, and GitHub AE.GitHub Packages is not available for private repositories owned by accounts using legacy per-repository plans. Also, accounts using legacy per-repository plans cannot access registries that support granular permissions, because these accounts are billed by repository</p> <p>You can publish packages in a public repository (public packages) to share with all of GitHub, or in a private repository (private packages) to share with collaborators or an organization. A repository can be connected to more than one package. To prevent confusion, make sure the README and description clearly provide information about each package.</p>"},{"location":"index3/#installing-a-package","title":"Installing a package","text":"<p>You can install a package from GitHub Packages using any supported package client by following the same general guidelines. 1 - Authenticate to GitHub Packages using the instructions for your package client. For more information, see \"Introduction to GitHub Packages.\" 2 - Install the package using the instructions for your package client.</p>"},{"location":"index3/#deleting-a-version-of-a-repository-scoped-package","title":"Deleting a version of a repository-scoped package","text":"<pre><code>curl -X POST \\\n-H \"Accept: application/vnd.github.package-deletes-preview+json\" \\\n-H \"Authorization: bearer TOKEN\" \\\n-d '{\"query\":\"mutation { deletePackageVersion(input:{packageVersionId:\\\"MDIyOlJlZ2lzdHJ5UGFja2FnZVZlcnNpb243MTExNg==\\\"}) { success }}\"}' \\\nHOSTNAME/graphql\n</code></pre>"},{"location":"index3/#deleting-a-version-of-a-user-scoped-package-on-github","title":"Deleting a version of a user-scoped package on GitHub","text":""}]}